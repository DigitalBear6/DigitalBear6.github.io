<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo建站记录</title>
    <url>/2022/04/22/Hexo%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://hexo.io/">Hexo</a>是一个轻便的博客框架，其中内建的功能和插件能大幅度提高建站效率。 </p>
<h1 id="搭建Hexo-NexT-博客"><a href="#搭建Hexo-NexT-博客" class="headerlink" title="搭建Hexo-NexT 博客"></a>搭建Hexo-NexT 博客</h1><h2 id="下载Node-Js"><a href="#下载Node-Js" class="headerlink" title="下载Node Js"></a>下载<a href="https://nodejs.org/">Node Js</a></h2><p>Hexo是基于Node Js搭建的，所想用Hexo就必须配置Node Js环境。</p>
<p>选择对应的操作系统<a href="https://nodejs.org/en/download/">下载Node Js</a></p>
<h2 id="下载Git"><a href="#下载Git" class="headerlink" title="下载Git"></a>下载<a href="https://git-scm.com/">Git</a></h2><div class="note info">
            <p>可选 (用于部署到Github)</p>
          </div>
<p>点击上面的链接访问官网下载对应操作系统的到Git。</p>
<h2 id="下载Hexo"><a href="#下载Hexo" class="headerlink" title="下载Hexo"></a>下载<a href="https://hexo.io/">Hexo</a></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br><span class="line">$ npm install hexo</span><br></pre></td></tr></table></figure>

<h2 id="搭建Hexo环境"><a href="#搭建Hexo环境" class="headerlink" title="搭建Hexo环境"></a>搭建Hexo环境</h2><p>在任意一个目录打开终端(cmd)   输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init blog</span><br></pre></td></tr></table></figure>
<p>如果报错则输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npx hexo init blog</span><br></pre></td></tr></table></figure>
<p>之后遇到hexo开头的命令都在前面加上npx。</p>
<div class="note default">
            <p>“blog” 是本文hexo的根目录，可以替换成任意合法的文件名称。</p>
          </div>

<p>进入文件夹：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> blog</span><br></pre></td></tr></table></figure>
<h1 id><a href="#" class="headerlink" title></a></h1><h2 id="GitHub准备"><a href="#GitHub准备" class="headerlink" title="GitHub准备"></a><a href="https://github.com/">GitHub</a>准备</h2><h3 id="创建账号"><a href="#创建账号" class="headerlink" title="创建账号"></a>创建账号</h3><p>没啥好说的，信息随便填</p>
<h3 id="创建存储库"><a href="#创建存储库" class="headerlink" title="创建存储库"></a>创建存储库</h3><p>进入”Your repositories”<br><img src="/images/hexo-ztj/1.png" width="300" height="600" alt="github存储库1" align="center"><br>点击”New”<br><img src="/images/hexo-ztj/2.png" width="500" height="200" alt="github存储库2" align="center"><br>存储库名称填写形式： “username”.github.io<br><img src="/images/hexo-ztj/3.png" width="500" height="200" alt="github存储库3" align="center"></p>
<h3 id="生成SSH-key"><a href="#生成SSH-key" class="headerlink" title="生成SSH key"></a>生成SSH key</h3><p>打开终端，输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh-agent bash</span><br></pre></td></tr></table></figure>
<p>回车，进程结束再输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure>
<p>复制输出信息，打开github, settings, SSH and GPG keys.<br><img src="/images/hexo-ztj/4.png" width="600" height="300" alt="github keys 1" align="center"><br>Title 随便填，Key填之前在终端输出的信息。<br><img src="/images/hexo-ztj/5.png" width="600" height="300" alt="github keys 2" align="center"><br>查看是否链接成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<p>默认输出</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hi &lt;username&gt; ! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure>
<div class="note warning">
            <p>如果失败，请关闭代理。</p>
          </div>

<h1 id="-1"><a href="#-1" class="headerlink" title></a></h1><h2 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置 _config.yml"></a>配置 _config.yml</h2><p>回到刚刚创建的<a href="https://github.com/">Github</a>存储库。<br>复制https clone链接<br><img src="/images/hexo-ztj/6.png" width="600" height="367" alt="config 1" align="center"></p>
<p>打开 _config.yml<br>可以在终端用vim打开：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vim _config.yml</span><br></pre></td></tr></table></figure>
<p>输入”i”以打开</p>
<p>找到以下内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>输入:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: 刚刚复制的https <span class="built_in">clone</span>链接</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<h2 id="发布！"><a href="#发布！" class="headerlink" title="发布！"></a>发布！</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo clean  //清除缓存文件db.json和已生成的静态文件public</span><br><span class="line">$ hexo g   //生成网站静态文件到默认设置的public文件夹</span><br><span class="line">$ hexo d   //部署网站到设定的仓库</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Hexo博客</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>Hexo</tag>
        <tag>Node Js</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo建站记录</title>
    <url>/2022/04/23/music/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Music-test"><a href="#Music-test" class="headerlink" title="Music (test)"></a>Music (test)</h1>
        <div id="aplayer-UjVEcaFf" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">
            <pre class="aplayer-lrc-content"></pre>
        </div>
        <script>
          var ap = new APlayer({
            element: document.getElementById("aplayer-UjVEcaFf"),
            narrow: false,
            autoplay: false,
            showlrc: false,
            music: {
              title: "Caffeine",
              author: "Jeff Williams",
              url: "/music/19Extended-听力.mp3",
              pic: "",
              lrc: ""
            }
          });
          window.aplayers || (window.aplayers = []);
          window.aplayers.push(ap);
        </script>

]]></content>
      <categories>
        <category>Music</category>
      </categories>
      <tags>
        <tag>Music</tag>
      </tags>
  </entry>
</search>
